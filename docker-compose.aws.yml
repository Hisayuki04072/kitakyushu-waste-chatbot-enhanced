# AWS環境用 Docker Compose設定
# GPU最適化版（CPUでも動作可能）

version: '3.8'

services:
  # Ollama LLMサービス
  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: kitakyushu-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
    networks:
      - kitakyushu_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # バックエンドサービス
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: kitakyushu-backend
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./chroma_db:/app/chroma_db
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - LLM_MODEL=hf.co/mmnga/Llama-3.1-Swallow-8B-Instruct-v0.5-gguf:Q4_K_M
      - EMBED_MODEL=bge-m3
      - CHROMA_TELEMETRY=False
      - ANONYMIZED_TELEMETRY=False
      - CHROMA_ANALYTICS_DISABLED=True
      - CHROMA_DISABLE_TELEMETRY=True
      - PYTHONPATH=/app
      - AWS_DEPLOYMENT=true
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - kitakyushu_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/search-info"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # フロントエンドサービス
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: kitakyushu-frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend/logs:/app/frontend/logs
    environment:
      - BACKEND_URL=http://backend:8000
      - PYTHONPATH=/app
      - AWS_DEPLOYMENT=true
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - kitakyushu_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx リバースプロキシ（AWS ALB対応）
  nginx:
    image: nginx:alpine
    container_name: kitakyushu-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-aws.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - kitakyushu_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  ollama_data:
    driver: local

networks:
  kitakyushu_network:
    driver: bridge
